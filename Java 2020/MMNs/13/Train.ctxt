#BlueJ class context
comment0.target=Train
comment0.text=\r\n\ Represents\ a\ Train.\r\n\ Author\ \:\ Roey\ Shtern\r\n\ Version\ \:\ 22/4/2020\r\n
comment1.params=dest\ h\ m\ duration\ pass\ seats\ price
comment1.target=Train(java.lang.String,\ int,\ int,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ Constructor\ of\ class\ Train.\ \r\n\ Constructs\ a\ new\ train.\ \r\n\ duration\ should\ be\ positive,\ otherwise\ it\ should\ be\ set\ to\ 0.\ \r\n\ pass\ should\ be\ positive,\ otherwise\ it\ should\ be\ set\ to\ 0.\ \r\n\ pass\ should\ be\ less\ than\ seats\ otherwise\ it\ should\ be\ set\ to\ seats.\ \r\n\ seats\ should\ be\ positive,\ otherwise\ it\ should\ be\ set\ to\ 0.\ \r\n\ price\ should\ be\ positive,\ otherwise\ it\ should\ be\ set\ to\ 0.\r\n\ @param\ dest\ the\ destination\ of\ the\ train\r\n\ @param\ h\ the\ hour\ of\ departure.\r\n\ @param\ m\ the\ minute\ of\ departue.\r\n\ @param\ duration\ the\ duration\ of\ the\ travel.\r\n\ @param\ pass\ the\ number\ of\ passeners.\r\n\ @param\ seats\ the\ number\ of\ seats\ in\ the\ train.\r\n\ @param\ price\ the\ price\ of\ the\ travel.\r\n
comment10.params=d
comment10.target=void\ setDestination(java.lang.String)
comment10.text=\r\n\ updates\ the\ destination\ of\ the\ train.\r\n\ d\ in\ not\ null.\r\n\ @param\ d\ the\ new\ detination\ of\ the\ train.\r\n
comment11.params=d
comment11.target=void\ setDuration(int)
comment11.text=\r\n\ updates\ the\ duration\ of\ the\ train.\r\n\ d\ should\ be\ positive\ or\ zero,\ otherwise\ duration\ is\ unchanged.\r\n\ @param\ d\ the\ new\ duration\ of\ the\ train.\r\n
comment12.params=p
comment12.target=void\ setPassengers(int)
comment12.text=\r\n\ updates\ the\ number\ of\ passengers.\r\n\ p\ should\ be\ positive\ or\ zero,\ otherwise\ passengers\ is\ unchanged.\ \r\n\ p\ should\ be\ less\ than\ seats\ otherwise\ it\ should\ be\ set\ to\ seats.\r\n\ @param\ p\ the\ new\ number\ of\ passengers.\r\n
comment13.params=p
comment13.target=void\ setPrice(int)
comment13.text=\r\n\ updates\ the\ price.\r\n\ p\ should\ be\ positive\ or\ zero,\ otherwise\ price\ is\ unchanged.\r\n\ @param\ p\ the\ new\ price.\r\n
comment14.params=s
comment14.target=void\ setSeats(int)
comment14.text=\r\n\ updates\ the\ number\ of\ seats.\r\n\ s\ should\ be\ positive\ or\ zero,\ otherwise\ seats\ is\ unchanged.\ \r\n\ s\ should\ be\ larger\ than\ passengers,\ otherwise\ seats\ is\ unchanged.\r\n\ @param\ s\ the\ new\ number\ of\ seats.\r\n
comment15.params=other
comment15.target=boolean\ equals(Train)
comment15.text=\r\n\ Check\ if\ the\ received\ train\ is\ equal\ to\ this\ train.\r\n\ @param\ other\ The\ train\ to\ be\ compared\ with\ this\ train\r\n\ @return\ true\ if\ the\ received\ train\ is\ equal\ to\ this\ train.\r\n
comment16.params=
comment16.target=Time1\ getArrivalTime()
comment16.text=\r\n\ Returns\ the\ arrival\ time.\r\n\ @return\ the\ arrival\ time.\r\n
comment17.params=num
comment17.target=boolean\ addPassengers(int)
comment17.text=\r\n\ Add\ num\ passengers\ to\ the\ train.\r\n\ @param\ num\ The\ number\ of\ passengers\ to\ add.\r\n\ @return\ true\ if\ the\ total\ number\ of\ current\ passengers\ and\ num\ is\ less\ or\ equal\ to\ seats.\r\n
comment18.params=
comment18.target=boolean\ isFull()
comment18.text=\r\n\ Returns\ true\ if\ train\ is\ full.\r\n\ @return\ true\ if\ train\ is\ full.\r\n
comment19.params=other
comment19.target=boolean\ isCheaper(Train)
comment19.text=\r\n\ Returns\ true\ if\ the\ price\ for\ this\ train\ is\ cheaper\ \r\n\ than\ the\ other\ train.\r\n\ @param\ other\ the\ other\ train\ to\ compare\ price\ with.\r\n\ @return\ true\ if\ the\ price\ for\ this\ train\ is\ cheaper\ than\ the\ other\ train.\r\n
comment2.params=other
comment2.target=Train(Train)
comment2.text=\r\n\ Copy\ constructor\ for\ Train.\r\n\ Construct\ a\ train\ with\ the\ same\ instance\ variables\ as\ another\ train.\r\n\ @\ param\ other\ The\ train\ object\ from\ which\ to\ construct\ the\ new\ train.\r\n
comment20.params=
comment20.target=int\ totalPrice()
comment20.text=\r\n\ Returns\ the\ total\ price\ for\ all\ passengers.\r\n\ @return\ the\ total\ price\ for\ all\ passengers.\r\n
comment21.params=other
comment21.target=boolean\ arrivesEarlier(Train)
comment21.text=\r\n\ Returns\ true\ if\ the\ arrival\ time\ of\ this\ train\ is\ earlier\ than\ \r\n\ the\ arrival\ time\ of\ the\ other\ train.\r\n\ other\ is\ not\ null.\r\n\ @param\ other\ the\ other\ train\ to\ compare\ arrival\ time\ with.\r\n\ @return\ true\ if\ the\ arrival\ time\ of\ this\ train\ is\ earlier\ than\ arrival\ time\ of\ the\ other\ train.\r\n
comment22.params=
comment22.target=java.lang.String\ toString()
comment22.text=\r\n\ Return\ a\ string\ representation\ of\ the\ train.\r\n\ @return\ String\ representation\ of\ the\ train.\r\n
comment3.params=
comment3.target=Time1\ getDeparture()
comment3.text=\r\n\ returns\ the\ departure\ time.\r\n\ @return\ the\ departure\ time.\r\n
comment4.params=
comment4.target=java.lang.String\ getDestination()
comment4.text=\r\n\ returns\ the\ destination.\r\n\ @return\ the\ destination\ of\ the\ train.\r\n
comment5.params=
comment5.target=int\ getDuration()
comment5.text=\r\n\ returns\ the\ duration\ of\ the\ train.\r\n\ @return\ the\ duration\ of\ the\ train.\r\n
comment6.params=
comment6.target=int\ getPassengers()
comment6.text=\r\n\ returns\ the\ number\ of\ passengers.\r\n\ @return\ the\ number\ of\ passengers.\r\n
comment7.params=
comment7.target=int\ getPrice()
comment7.text=\r\n\ returns\ the\ price\ of\ the\ train.\r\n\ @return\ the\ price\ of\ the\ train.\r\n
comment8.params=
comment8.target=int\ getSeats()
comment8.text=\r\n\ returns\ the\ number\ of\ seats.\r\n\ @return\ the\ number\ of\ seats.\r\n
comment9.params=t
comment9.target=void\ setDeparture(Time1)
comment9.text=\r\n\ updates\ the\ departure\ time\ of\ the\ train.\r\n\ t\ is\ not\ null.\r\n\ @param\ t\ the\ new\ departure\ time\ of\ the\ train.\r\n
numComments=23
