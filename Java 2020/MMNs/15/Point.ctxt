#BlueJ class context
comment0.target=Point
comment0.text=\r\n\ Point\ -\ Represent\ Point\ on\ axis\r\n\ @Author\ \:\ Roey\ Shtern\r\n\ @Version\ \:\ 21/6/2020\r\n
comment1.params=x\ y
comment1.target=Point(double,\ double)
comment1.text=\r\n\ Constructs\ a\ Point\ object.\ \r\n\ Construct\ a\ new\ point\ instance\ with\ the\ specified\ x\ and\ y\r\n\ @param\ x\ the\ x\ value\ on\ axis\r\n\ @param\ y\ the\ y\ value\ on\ axis\r\n
comment10.params=other
comment10.target=boolean\ isUnder(Point)
comment10.text=\r\n\ Checks\ if\ this\ point\ is\ under\ a\ received\ point.\r\n\ @param\ other\ The\ point\ to\ check\ if\ this\ point\ is\ under\r\n\ @return\ true\ if\ this\ point\ is\ under\ other\ point\r\n
comment11.params=other
comment11.target=boolean\ isLeft(Point)
comment11.text=\r\n\ Checks\ if\ this\ point\ is\ left\ to\ a\ received\ point.\r\n\ @param\ other\ The\ point\ to\ check\ if\ this\ point\ is\ left\ to\ a\ received\ point\r\n\ @return\ true\ if\ this\ point\ is\ left\ to\ the\ other\ point\r\n
comment12.params=other
comment12.target=boolean\ isRight(Point)
comment12.text=\r\n\ Checks\ if\ this\ point\ is\ right\ to\ a\ received\ point.\r\n\ @param\ other\ The\ point\ to\ check\ if\ this\ point\ is\ right\ to\ a\ received\ point\r\n\ @return\ true\ if\ this\ point\ is\ right\ to\ the\ other\ point\r\n
comment13.params=p
comment13.target=double\ distance(Point)
comment13.text=\r\n\ Calculates\ the\ distances\ between\ two\ points.\ \r\n\ @param\ p\ The\ point\ to\ check\ the\ distance\ to.\r\n\ @return\ double\ the\ distance\ between\ the\ two\ points\r\n
comment14.params=dx\ dy
comment14.target=void\ move(double,\ double)
comment14.text=\r\n\ This\ function\ will\ move\ this\ point\ according\ to\ the\ recieved\ dx\ and\ dy\r\n\ @param\ dx\ the\ delta\ of\ x\ to\ move\ this\ point\r\n\ @param\ dy\ the\ delta\ of\ y\ to\ move\ this\ point\r\n
comment2.params=other
comment2.target=Point(Point)
comment2.text=\r\n\ Copy\ constructor\ for\ Point.\ Construct\ a\ point\ with\ the\ same\ instance\ variables\ as\ another\ point.\r\n\ @param\ other\ The\ point\ object\ from\ which\ to\ construct\ the\ new\ point\r\n
comment3.params=
comment3.target=double\ getX()
comment3.text=\r\n\ Returns\ the\ x\ value\ of\ the\ point.\r\n\ @return\ the\ x\ value\ of\ the\ point\r\n
comment4.params=
comment4.target=double\ getY()
comment4.text=\r\n\ Returns\ the\ y\ value\ of\ the\ point.\r\n\ @return\ the\ y\ value\ of\ the\ point\r\n
comment5.params=num
comment5.target=void\ setX(double)
comment5.text=\r\n\ Changes\ the\ x\ of\ the\ point\r\n\ @param\ num\ The\ new\ x\r\n
comment6.params=num
comment6.target=void\ setY(double)
comment6.text=\r\n\ Changes\ the\ y\ of\ the\ point\r\n\ @param\ num\ The\ new\ y\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Returns\ a\ string\ representation\ of\ this\ point(x,y).\r\n\ @return\ String\ representation\ of\ this\ point(x,y).\r\n
comment8.params=other
comment8.target=boolean\ equals(Point)
comment8.text=\r\n\ Checks\ if\ the\ received\ point\ is\ equal\ to\ this\ point.\r\n\ @param\ other\ The\ point\ to\ be\ compared\ with\ this\ point\r\n\ @return\ true\ if\ the\ received\ point\ is\ equal\ to\ this\ point\r\n
comment9.params=other
comment9.target=boolean\ isAbove(Point)
comment9.text=\r\n\ Checks\ if\ this\ point\ is\ above\ a\ received\ point.\r\n\ @param\ other\ The\ point\ to\ check\ if\ this\ point\ is\ above\r\n\ @return\ true\ if\ this\ point\ is\ above\ other\ point\r\n
numComments=15
